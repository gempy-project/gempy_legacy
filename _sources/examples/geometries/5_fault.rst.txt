
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/geometries/5_fault.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_geometries_5_fault.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_geometries_5_fault.py:


Model 5 - Fault
===============

.. GENERATED FROM PYTHON SOURCE LINES 8-11

A simple fault model with constant offset. We start by importing the
necessary dependencies:


.. GENERATED FROM PYTHON SOURCE LINES 13-14

Importing GemPy

.. GENERATED FROM PYTHON SOURCE LINES 14-19

.. code-block:: python3

    import gempy as gp

    import pandas as pd
    pd.set_option('precision', 2)








.. GENERATED FROM PYTHON SOURCE LINES 20-22

Creating the model by importing the input data and displaying it:


.. GENERATED FROM PYTHON SOURCE LINES 24-31

.. code-block:: python3

    data_path = 'https://raw.githubusercontent.com/cgre-aachen/gempy_data/master/'
    path_to_data = data_path + "/data/input_data/jan_models/"

    geo_data = gp.create_data('fault', extent=[0, 1000, 0, 1000, 0, 1000], resolution=[50, 50, 50],
                              path_o=path_to_data + "model5_orientations.csv",
                              path_i=path_to_data + "model5_surface_points.csv")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular']




.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: python3

    geo_data.get_data()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>X</th>
          <th>Y</th>
          <th>Z</th>
          <th>smooth</th>
          <th>surface</th>
          <th>G_x</th>
          <th>G_y</th>
          <th>G_z</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th rowspan="22" valign="top">surface_points</th>
          <th>0</th>
          <td>0</td>
          <td>200</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0</td>
          <td>800</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2</th>
          <td>200</td>
          <td>200</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>200</td>
          <td>800</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>800</td>
          <td>200</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>5</th>
          <td>800</td>
          <td>800</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>6</th>
          <td>1000</td>
          <td>200</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>7</th>
          <td>1000</td>
          <td>800</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>8</th>
          <td>0</td>
          <td>200</td>
          <td>800</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>9</th>
          <td>0</td>
          <td>800</td>
          <td>800</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>10</th>
          <td>200</td>
          <td>200</td>
          <td>800</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>11</th>
          <td>200</td>
          <td>800</td>
          <td>800</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>12</th>
          <td>800</td>
          <td>200</td>
          <td>400</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>13</th>
          <td>800</td>
          <td>800</td>
          <td>400</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>14</th>
          <td>1000</td>
          <td>200</td>
          <td>400</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>15</th>
          <td>1000</td>
          <td>800</td>
          <td>400</td>
          <td>2.00e-06</td>
          <td>rock2</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>16</th>
          <td>500</td>
          <td>500</td>
          <td>500</td>
          <td>2.00e-06</td>
          <td>fault</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>17</th>
          <td>450</td>
          <td>500</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>fault</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>18</th>
          <td>500</td>
          <td>200</td>
          <td>500</td>
          <td>2.00e-06</td>
          <td>fault</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>19</th>
          <td>450</td>
          <td>200</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>fault</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>20</th>
          <td>500</td>
          <td>800</td>
          <td>500</td>
          <td>2.00e-06</td>
          <td>fault</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>21</th>
          <td>450</td>
          <td>800</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>fault</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th rowspan="5" valign="top">orientations</th>
          <th>1</th>
          <td>100</td>
          <td>500</td>
          <td>600</td>
          <td>1.00e-02</td>
          <td>rock1</td>
          <td>1.00e-12</td>
          <td>1.00e-12</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>3</th>
          <td>900</td>
          <td>500</td>
          <td>200</td>
          <td>1.00e-02</td>
          <td>rock1</td>
          <td>1.00e-12</td>
          <td>1.00e-12</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>0</th>
          <td>100</td>
          <td>500</td>
          <td>800</td>
          <td>1.00e-02</td>
          <td>rock2</td>
          <td>1.00e-12</td>
          <td>1.00e-12</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>2</th>
          <td>900</td>
          <td>500</td>
          <td>400</td>
          <td>1.00e-02</td>
          <td>rock2</td>
          <td>1.00e-12</td>
          <td>1.00e-12</td>
          <td>1.0</td>
        </tr>
        <tr>
          <th>4</th>
          <td>500</td>
          <td>500</td>
          <td>500</td>
          <td>1.00e-02</td>
          <td>fault</td>
          <td>8.66e-01</td>
          <td>1.00e-12</td>
          <td>0.5</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 35-37

Setting and ordering the units and series:


.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: python3

    gp.map_stack_to_surfaces(geo_data, {"Fault_Series": 'fault',
                                        "Strat_Series": ('rock2', 'rock1')})
    geo_data.set_is_fault(['Fault_Series'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fault colors changed. If you do not like this behavior, set change_color to False.


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>order_series</th>
          <th>BottomRelation</th>
          <th>isActive</th>
          <th>isFault</th>
          <th>isFinite</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>Fault_Series</th>
          <td>1</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Strat_Series</th>
          <td>2</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Basement</th>
          <td>3</td>
          <td>Erosion</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: python3

    gp.plot_2d(geo_data, direction='y')




.. image:: /examples/geometries/images/sphx_glr_5_fault_001.png
    :alt: Cell Number: mid Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcc6bb43b20>



.. GENERATED FROM PYTHON SOURCE LINES 47-49

Calculating the model:


.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: python3

    interp_data = gp.set_interpolator(geo_data, theano_optimizer='fast_compile')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting kriging parameters to their default values.
    Compiling theano function...
    Level of Optimization:  fast_compile
    Device:  cpu
    Precision:  float64
    Number of faults:  1
    Compilation Done!
    Kriging values: 
                         values
    range              1732.05
    $C_o$             71428.57
    drift equations  [3, 3, 3]




.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: python3

    sol = gp.compute_model(geo_data)








.. GENERATED FROM PYTHON SOURCE LINES 57-59

Displaying the result in x and y direction:


.. GENERATED FROM PYTHON SOURCE LINES 61-62

sphinx_gallery_thumbnail_number = 2

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. code-block:: python3

    gp.plot_2d(geo_data, cell_number=25,
               direction='y', show_data=False, show_all_data=True)




.. image:: /examples/geometries/images/sphx_glr_5_fault_002.png
    :alt: Cell Number: 25 Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcc3012afa0>



.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: python3

    gp.plot_2d(geo_data, cell_number=25,
               direction='x', show_data=True)




.. image:: /examples/geometries/images/sphx_glr_5_fault_003.png
    :alt: Cell Number: 25 Direction: x
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcc6bb43be0>



.. GENERATED FROM PYTHON SOURCE LINES 70-75

.. code-block:: python3


    gp.plot_2d(geo_data, cell_number=25,
               direction='y', show_data=True, show_scalar=True, series_n=1)


    gp.save_model(geo_data)


.. image:: /examples/geometries/images/sphx_glr_5_fault_004.png
    :alt: Cell Number: 25 Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.479 seconds)


.. _sphx_glr_download_examples_geometries_5_fault.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 5_fault.py <5_fault.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 5_fault.ipynb <5_fault.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
