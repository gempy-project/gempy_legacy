
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/geometries/2_fold.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_geometries_2_fold.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_geometries_2_fold.py:


Model 2 - Anticline
===================

.. GENERATED FROM PYTHON SOURCE LINES 8-11

A simple anticline structure. We start by importing the necessary
dependencies:


.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: python3


    # Importing GemPy
    import gempy as gp

    import pandas as pd
    pd.set_option('precision', 2)








.. GENERATED FROM PYTHON SOURCE LINES 19-21

Creating the model by importing the input data and displaying it:


.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: python3

    data_path = 'https://raw.githubusercontent.com/cgre-aachen/gempy_data/master/'
    path_to_data = data_path + "/data/input_data/jan_models/"
    geo_data = gp.create_data('fold', extent=[0, 1000, 0, 1000, 0, 1000], resolution=[50, 50, 50],
                              path_o=path_to_data + "model2_orientations.csv",
                              path_i=path_to_data + "model2_surface_points.csv")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular']




.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: python3

    geo_data.get_data().head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>X</th>
          <th>Y</th>
          <th>Z</th>
          <th>smooth</th>
          <th>surface</th>
          <th>G_x</th>
          <th>G_y</th>
          <th>G_z</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th rowspan="5" valign="top">surface_points</th>
          <th>0</th>
          <td>0</td>
          <td>100</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0</td>
          <td>500</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0</td>
          <td>900</td>
          <td>200</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>400</td>
          <td>100</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>400</td>
          <td>500</td>
          <td>600</td>
          <td>2.00e-06</td>
          <td>rock1</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 33-35

Setting and ordering the units and series:


.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: python3

    gp.map_stack_to_surfaces(geo_data, {"Strat_Series": ('rock2', 'rock1'), "Basement_Series": ('basement')})






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style  type="text/css" >
    #T_cfc8a_row0_col3{
                background-color:  #015482;
            }#T_cfc8a_row1_col3{
                background-color:  #9f0052;
            }#T_cfc8a_row2_col3{
                background-color:  #ffbe00;
            }</style><table id="T_cfc8a_" ><thead>    <tr>        <th class="blank level0" ></th>        <th class="col_heading level0 col0" >surface</th>        <th class="col_heading level0 col1" >series</th>        <th class="col_heading level0 col2" >order_surfaces</th>        <th class="col_heading level0 col3" >color</th>        <th class="col_heading level0 col4" >id</th>    </tr></thead><tbody>
                    <tr>
                            <th id="T_cfc8a_level0_row0" class="row_heading level0 row0" >0</th>
                            <td id="T_cfc8a_row0_col0" class="data row0 col0" >rock1</td>
                            <td id="T_cfc8a_row0_col1" class="data row0 col1" >Strat_Series</td>
                            <td id="T_cfc8a_row0_col2" class="data row0 col2" >1</td>
                            <td id="T_cfc8a_row0_col3" class="data row0 col3" >#015482</td>
                            <td id="T_cfc8a_row0_col4" class="data row0 col4" >1</td>
                </tr>
                <tr>
                            <th id="T_cfc8a_level0_row1" class="row_heading level0 row1" >1</th>
                            <td id="T_cfc8a_row1_col0" class="data row1 col0" >rock2</td>
                            <td id="T_cfc8a_row1_col1" class="data row1 col1" >Strat_Series</td>
                            <td id="T_cfc8a_row1_col2" class="data row1 col2" >2</td>
                            <td id="T_cfc8a_row1_col3" class="data row1 col3" >#9f0052</td>
                            <td id="T_cfc8a_row1_col4" class="data row1 col4" >2</td>
                </tr>
                <tr>
                            <th id="T_cfc8a_level0_row2" class="row_heading level0 row2" >2</th>
                            <td id="T_cfc8a_row2_col0" class="data row2 col0" >basement</td>
                            <td id="T_cfc8a_row2_col1" class="data row2 col1" >Basement_Series</td>
                            <td id="T_cfc8a_row2_col2" class="data row2 col2" >1</td>
                            <td id="T_cfc8a_row2_col3" class="data row2 col3" >#ffbe00</td>
                            <td id="T_cfc8a_row2_col4" class="data row2 col4" >3</td>
                </tr>
        </tbody></table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: python3

    gp.plot_2d(geo_data, direction=['y'])




.. image:: /examples/geometries/images/sphx_glr_2_fold_001.png
    :alt: Cell Number: mid Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcb8b7774f0>



.. GENERATED FROM PYTHON SOURCE LINES 43-45

Calculating the model:


.. GENERATED FROM PYTHON SOURCE LINES 47-49

.. code-block:: python3

    interp_data = gp.set_interpolator(geo_data, theano_optimizer='fast_compile')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting kriging parameters to their default values.
    Compiling theano function...
    Level of Optimization:  fast_compile
    Device:  cpu
    Precision:  float64
    Number of faults:  0
    Compilation Done!
    Kriging values: 
                        values
    range             1732.05
    $C_o$            71428.57
    drift equations    [3, 3]




.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: python3

    geo_data.orientations






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>X</th>
          <th>Y</th>
          <th>Z</th>
          <th>G_x</th>
          <th>G_y</th>
          <th>G_z</th>
          <th>smooth</th>
          <th>surface</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>1</th>
          <td>500</td>
          <td>500</td>
          <td>620</td>
          <td>1.00e-12</td>
          <td>1.00e-12</td>
          <td>1.0</td>
          <td>0.01</td>
          <td>rock1</td>
        </tr>
        <tr>
          <th>0</th>
          <td>500</td>
          <td>500</td>
          <td>820</td>
          <td>1.00e-12</td>
          <td>1.00e-12</td>
          <td>1.0</td>
          <td>0.01</td>
          <td>rock2</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: python3

    sol = gp.compute_model(geo_data)








.. GENERATED FROM PYTHON SOURCE LINES 56-58

Displaying the result in y and x direction:


.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: python3

    gp.plot_2d(geo_data, cell_number=15,
               direction='y', show_data=True)




.. image:: /examples/geometries/images/sphx_glr_2_fold_002.png
    :alt: Cell Number: 15 Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcb8c06d9a0>



.. GENERATED FROM PYTHON SOURCE LINES 64-65

sphinx_gallery_thumbnail_number = 2

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: python3

    gp.plot_2d(geo_data, cell_number=25,
               direction='x', show_data=True)

    gp.save_model(geo_data)


.. image:: /examples/geometries/images/sphx_glr_2_fold_003.png
    :alt: Cell Number: 25 Direction: x
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.009 seconds)


.. _sphx_glr_download_examples_geometries_2_fold.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 2_fold.py <2_fold.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 2_fold.ipynb <2_fold.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
