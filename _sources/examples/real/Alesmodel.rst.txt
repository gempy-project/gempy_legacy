
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/real/Alesmodel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_real_Alesmodel.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_real_Alesmodel.py:


Alesmodel: Plotting sections and maps.
======================================

.. GENERATED FROM PYTHON SOURCE LINES 6-12

.. code-block:: python3


    import gempy as gp
    import numpy as np
    import matplotlib.pyplot as plt
    import os








.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: python3

    cwd = os.getcwd()
    if 'examples' not in cwd:
        data_path = os.getcwd() + '/examples'
    else:
        data_path = cwd + '/../..'

    path_interf = data_path + "/data/input_data/AlesModel/2018_interf.csv"
    path_orient = data_path + "/data/input_data/AlesModel/2018_orient_clust_n_init5_0.csv"
    path_dem = data_path + "/data/input_data/AlesModel/_cropped_DEM_coarse.tif"








.. GENERATED FROM PYTHON SOURCE LINES 24-31

.. code-block:: python3

    resolution = [100, 100, 100]
    extent = np.array([729550.0, 751500.0, 1913500.0, 1923650.0, -1800.0, 800.0])
    geo_model = gp.create_model('Alesmodel')
    gp.init_data(geo_model, extent=extent, resolution=resolution,
                 path_i=path_interf,
                 path_o=path_orient)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular']

    Alesmodel  2021-04-18 11:31



.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: python3

    sdict = {'section1': ([732000, 1916000], [745000, 1916000], [200, 150])}
    geo_model.set_section_grid(sdict)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Active grids: ['regular' 'sections']


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>start</th>
          <th>stop</th>
          <th>resolution</th>
          <th>dist</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>section1</th>
          <td>[732000, 1916000]</td>
          <td>[745000, 1916000]</td>
          <td>[200, 150]</td>
          <td>13000.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 36-37

sorting of lithologies

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: python3

    gp.map_stack_to_surfaces(geo_model, {'fault_left': ('fault_left'),
                                         'fault_right': ('fault_right'),
                                         'fault_lr': ('fault_lr'),
                                         'Trias_Series': ('TRIAS', 'LIAS'),
                                         'Carbon_Series': ('CARBO'),
                                         'Basement_Series': ('basement')}, remove_unused_series=True)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style  type="text/css" >
    #T_a76f7_row0_col3{
                background-color:  #015482;
            }#T_a76f7_row1_col3{
                background-color:  #ffbe00;
            }#T_a76f7_row2_col3{
                background-color:  #9f0052;
            }#T_a76f7_row3_col3{
                background-color:  #728f02;
            }#T_a76f7_row4_col3{
                background-color:  #443988;
            }#T_a76f7_row5_col3{
                background-color:  #ff3f20;
            }#T_a76f7_row6_col3{
                background-color:  #5DA629;
            }</style><table id="T_a76f7_" ><thead>    <tr>        <th class="blank level0" ></th>        <th class="col_heading level0 col0" >surface</th>        <th class="col_heading level0 col1" >series</th>        <th class="col_heading level0 col2" >order_surfaces</th>        <th class="col_heading level0 col3" >color</th>        <th class="col_heading level0 col4" >id</th>    </tr></thead><tbody>
                    <tr>
                            <th id="T_a76f7_level0_row0" class="row_heading level0 row0" >0</th>
                            <td id="T_a76f7_row0_col0" class="data row0 col0" >fault_left</td>
                            <td id="T_a76f7_row0_col1" class="data row0 col1" >fault_left</td>
                            <td id="T_a76f7_row0_col2" class="data row0 col2" >1</td>
                            <td id="T_a76f7_row0_col3" class="data row0 col3" >#015482</td>
                            <td id="T_a76f7_row0_col4" class="data row0 col4" >1</td>
                </tr>
                <tr>
                            <th id="T_a76f7_level0_row1" class="row_heading level0 row1" >2</th>
                            <td id="T_a76f7_row1_col0" class="data row1 col0" >fault_right</td>
                            <td id="T_a76f7_row1_col1" class="data row1 col1" >fault_right</td>
                            <td id="T_a76f7_row1_col2" class="data row1 col2" >1</td>
                            <td id="T_a76f7_row1_col3" class="data row1 col3" >#ffbe00</td>
                            <td id="T_a76f7_row1_col4" class="data row1 col4" >2</td>
                </tr>
                <tr>
                            <th id="T_a76f7_level0_row2" class="row_heading level0 row2" >1</th>
                            <td id="T_a76f7_row2_col0" class="data row2 col0" >fault_lr</td>
                            <td id="T_a76f7_row2_col1" class="data row2 col1" >fault_lr</td>
                            <td id="T_a76f7_row2_col2" class="data row2 col2" >1</td>
                            <td id="T_a76f7_row2_col3" class="data row2 col3" >#9f0052</td>
                            <td id="T_a76f7_row2_col4" class="data row2 col4" >3</td>
                </tr>
                <tr>
                            <th id="T_a76f7_level0_row3" class="row_heading level0 row3" >3</th>
                            <td id="T_a76f7_row3_col0" class="data row3 col0" >TRIAS</td>
                            <td id="T_a76f7_row3_col1" class="data row3 col1" >Trias_Series</td>
                            <td id="T_a76f7_row3_col2" class="data row3 col2" >1</td>
                            <td id="T_a76f7_row3_col3" class="data row3 col3" >#728f02</td>
                            <td id="T_a76f7_row3_col4" class="data row3 col4" >4</td>
                </tr>
                <tr>
                            <th id="T_a76f7_level0_row4" class="row_heading level0 row4" >4</th>
                            <td id="T_a76f7_row4_col0" class="data row4 col0" >LIAS</td>
                            <td id="T_a76f7_row4_col1" class="data row4 col1" >Trias_Series</td>
                            <td id="T_a76f7_row4_col2" class="data row4 col2" >2</td>
                            <td id="T_a76f7_row4_col3" class="data row4 col3" >#443988</td>
                            <td id="T_a76f7_row4_col4" class="data row4 col4" >5</td>
                </tr>
                <tr>
                            <th id="T_a76f7_level0_row5" class="row_heading level0 row5" >5</th>
                            <td id="T_a76f7_row5_col0" class="data row5 col0" >CARBO</td>
                            <td id="T_a76f7_row5_col1" class="data row5 col1" >Carbon_Series</td>
                            <td id="T_a76f7_row5_col2" class="data row5 col2" >1</td>
                            <td id="T_a76f7_row5_col3" class="data row5 col3" >#ff3f20</td>
                            <td id="T_a76f7_row5_col4" class="data row5 col4" >6</td>
                </tr>
                <tr>
                            <th id="T_a76f7_level0_row6" class="row_heading level0 row6" >6</th>
                            <td id="T_a76f7_row6_col0" class="data row6 col0" >basement</td>
                            <td id="T_a76f7_row6_col1" class="data row6 col1" >Basement_Series</td>
                            <td id="T_a76f7_row6_col2" class="data row6 col2" >1</td>
                            <td id="T_a76f7_row6_col3" class="data row6 col3" >#5DA629</td>
                            <td id="T_a76f7_row6_col4" class="data row6 col4" >7</td>
                </tr>
        </tbody></table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: python3

    colordict = {'LIAS': '#015482', 'TRIAS': '#9f0052', 'CARBO': '#ffbe00', 'basement': '#728f02',
                 'fault_left': '#2a2a2a', 'fault_right': '#545454', 'fault_lr': '#a5a391'}
    geo_model.surfaces.colors.change_colors(colordict)








.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: python3

    a = gp.plot_2d(geo_model, direction='y')




.. image:: /examples/real/images/sphx_glr_Alesmodel_001.png
    :alt: Cell Number: mid Direction: y
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: python3

    geo_model.rescaling






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>values</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>rescaling factor</th>
          <td>26804.17</td>
        </tr>
        <tr>
          <th>centers</th>
          <td>[739263.6925, 1917834.9612500002, 402.6439239999999]</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: python3

    gp.plot.plot_section_traces(geo_model)




.. image:: /examples/real/images/sphx_glr_Alesmodel_002.png
    :alt: Cell Number: -1 Direction: z
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcb8c099610>



.. GENERATED FROM PYTHON SOURCE LINES 59-62

Faults
''''''


.. GENERATED FROM PYTHON SOURCE LINES 64-66

.. code-block:: python3

    geo_model.set_is_fault(['fault_right', 'fault_left', 'fault_lr'], change_color=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fault colors changed. If you do not like this behavior, set change_color to False.


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>order_series</th>
          <th>BottomRelation</th>
          <th>isActive</th>
          <th>isFault</th>
          <th>isFinite</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>fault_left</th>
          <td>1</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>fault_right</th>
          <td>2</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>fault_lr</th>
          <td>3</td>
          <td>Fault</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Trias_Series</th>
          <td>4</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Carbon_Series</th>
          <td>5</td>
          <td>Erosion</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
        </tr>
        <tr>
          <th>Basement_Series</th>
          <td>6</td>
          <td>Erosion</td>
          <td>False</td>
          <td>False</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 67-72

.. code-block:: python3

    gp.set_interpolator(geo_model,
                        output=['geology'], compile_theano=True,
                        theano_optimizer='fast_run', dtype='float64',
                        verbose=[])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Setting kriging parameters to their default values.
    Compiling theano function...
    Level of Optimization:  fast_run
    Device:  cpu
    Precision:  float64
    Number of faults:  3
    Compilation Done!
    Kriging values: 
                                  values
    range                      24322.52
    $C_o$                   14085357.14
    drift equations  [3, 3, 3, 3, 3, 3]

    <gempy.core.interpolator.InterpolatorModel object at 0x7fccb8a38160>



.. GENERATED FROM PYTHON SOURCE LINES 73-76

Topography
~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: python3

    geo_model.set_topography(source='gdal', filepath=path_dem)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Cropped raster to geo_model.grid.extent.
    depending on the size of the raster, this can take a while...
    storing converted file...
    Active grids: ['regular' 'topography' 'sections']

    Grid Object. Values: 
    array([[ 7.29659750e+05,  1.91355075e+06, -1.78700000e+03],
           [ 7.29659750e+05,  1.91355075e+06, -1.76100000e+03],
           [ 7.29659750e+05,  1.91355075e+06, -1.73500000e+03],
           ...,
           [ 7.45000000e+05,  1.91600000e+06,  7.65100671e+02],
           [ 7.45000000e+05,  1.91600000e+06,  7.82550336e+02],
           [ 7.45000000e+05,  1.91600000e+06,  8.00000000e+02]])



.. GENERATED FROM PYTHON SOURCE LINES 81-83

.. code-block:: python3

    geo_model.surfaces






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style  type="text/css" >
    #T_7a99f_row0_col3,#T_7a99f_row1_col3,#T_7a99f_row2_col3{
                background-color:  #527682;
            }#T_7a99f_row3_col3{
                background-color:  #9f0052;
            }#T_7a99f_row4_col3{
                background-color:  #015482;
            }#T_7a99f_row5_col3{
                background-color:  #ffbe00;
            }#T_7a99f_row6_col3{
                background-color:  #728f02;
            }</style><table id="T_7a99f_" ><thead>    <tr>        <th class="blank level0" ></th>        <th class="col_heading level0 col0" >surface</th>        <th class="col_heading level0 col1" >series</th>        <th class="col_heading level0 col2" >order_surfaces</th>        <th class="col_heading level0 col3" >color</th>        <th class="col_heading level0 col4" >id</th>    </tr></thead><tbody>
                    <tr>
                            <th id="T_7a99f_level0_row0" class="row_heading level0 row0" >0</th>
                            <td id="T_7a99f_row0_col0" class="data row0 col0" >fault_left</td>
                            <td id="T_7a99f_row0_col1" class="data row0 col1" >fault_left</td>
                            <td id="T_7a99f_row0_col2" class="data row0 col2" >1</td>
                            <td id="T_7a99f_row0_col3" class="data row0 col3" >#527682</td>
                            <td id="T_7a99f_row0_col4" class="data row0 col4" >1</td>
                </tr>
                <tr>
                            <th id="T_7a99f_level0_row1" class="row_heading level0 row1" >2</th>
                            <td id="T_7a99f_row1_col0" class="data row1 col0" >fault_right</td>
                            <td id="T_7a99f_row1_col1" class="data row1 col1" >fault_right</td>
                            <td id="T_7a99f_row1_col2" class="data row1 col2" >1</td>
                            <td id="T_7a99f_row1_col3" class="data row1 col3" >#527682</td>
                            <td id="T_7a99f_row1_col4" class="data row1 col4" >2</td>
                </tr>
                <tr>
                            <th id="T_7a99f_level0_row2" class="row_heading level0 row2" >1</th>
                            <td id="T_7a99f_row2_col0" class="data row2 col0" >fault_lr</td>
                            <td id="T_7a99f_row2_col1" class="data row2 col1" >fault_lr</td>
                            <td id="T_7a99f_row2_col2" class="data row2 col2" >1</td>
                            <td id="T_7a99f_row2_col3" class="data row2 col3" >#527682</td>
                            <td id="T_7a99f_row2_col4" class="data row2 col4" >3</td>
                </tr>
                <tr>
                            <th id="T_7a99f_level0_row3" class="row_heading level0 row3" >3</th>
                            <td id="T_7a99f_row3_col0" class="data row3 col0" >TRIAS</td>
                            <td id="T_7a99f_row3_col1" class="data row3 col1" >Trias_Series</td>
                            <td id="T_7a99f_row3_col2" class="data row3 col2" >1</td>
                            <td id="T_7a99f_row3_col3" class="data row3 col3" >#9f0052</td>
                            <td id="T_7a99f_row3_col4" class="data row3 col4" >4</td>
                </tr>
                <tr>
                            <th id="T_7a99f_level0_row4" class="row_heading level0 row4" >4</th>
                            <td id="T_7a99f_row4_col0" class="data row4 col0" >LIAS</td>
                            <td id="T_7a99f_row4_col1" class="data row4 col1" >Trias_Series</td>
                            <td id="T_7a99f_row4_col2" class="data row4 col2" >2</td>
                            <td id="T_7a99f_row4_col3" class="data row4 col3" >#015482</td>
                            <td id="T_7a99f_row4_col4" class="data row4 col4" >5</td>
                </tr>
                <tr>
                            <th id="T_7a99f_level0_row5" class="row_heading level0 row5" >5</th>
                            <td id="T_7a99f_row5_col0" class="data row5 col0" >CARBO</td>
                            <td id="T_7a99f_row5_col1" class="data row5 col1" >Carbon_Series</td>
                            <td id="T_7a99f_row5_col2" class="data row5 col2" >1</td>
                            <td id="T_7a99f_row5_col3" class="data row5 col3" >#ffbe00</td>
                            <td id="T_7a99f_row5_col4" class="data row5 col4" >6</td>
                </tr>
                <tr>
                            <th id="T_7a99f_level0_row6" class="row_heading level0 row6" >6</th>
                            <td id="T_7a99f_row6_col0" class="data row6 col0" >basement</td>
                            <td id="T_7a99f_row6_col1" class="data row6 col1" >Basement_Series</td>
                            <td id="T_7a99f_row6_col2" class="data row6 col2" >1</td>
                            <td id="T_7a99f_row6_col3" class="data row6 col3" >#728f02</td>
                            <td id="T_7a99f_row6_col4" class="data row6 col4" >7</td>
                </tr>
        </tbody></table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 84-86

.. code-block:: python3

    _ = gp.compute_model(geo_model, compute_mesh=True, compute_mesh_options={'rescale': False})








.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: python3

    gp.plot_2d(geo_model, cell_number=[4], direction=['y'], show_topography=True,
               show_data=True)




.. image:: /examples/real/images/sphx_glr_Alesmodel_003.png
    :alt: Cell Number: 4 Direction: y
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcc6bb90a60>



.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: python3

    gp.plot_2d(geo_model, section_names=['topography'], show_data=False,
               show_boundaries=False)




.. image:: /examples/real/images/sphx_glr_Alesmodel_004.png
    :alt: Geological map
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.visualization_2d.Plot2D object at 0x7fcc2a5945e0>



.. GENERATED FROM PYTHON SOURCE LINES 95-96

sphinx_gallery_thumbnail_number = 5

.. GENERATED FROM PYTHON SOURCE LINES 96-98

.. code-block:: python3

    gp.plot_3d(geo_model)




.. image:: /examples/real/images/sphx_glr_Alesmodel_005.png
    :alt: Alesmodel
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <gempy.plot.vista.GemPyToVista object at 0x7fcb8ad989d0>



.. GENERATED FROM PYTHON SOURCE LINES 99-101

np.save('Ales_vert3', geo_model.solutions.vertices)
np.save('Ales_edges3', geo_model.solutions.edges)

.. GENERATED FROM PYTHON SOURCE LINES 103-104

gp.plot.plot_ar(geo_model)

.. GENERATED FROM PYTHON SOURCE LINES 104-105

.. code-block:: python3


    gp.save_model(geo_model)



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  3.841 seconds)


.. _sphx_glr_download_examples_real_Alesmodel.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Alesmodel.py <Alesmodel.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Alesmodel.ipynb <Alesmodel.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
